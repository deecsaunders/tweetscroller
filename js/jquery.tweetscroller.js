// Generated by CoffeeScript 1.3.3
(function() {

  (function($, window) {
    var TweetScroller, defaults, document, pluginName;
    pluginName = 'tweetscroller';
    document = window.document;
    defaults = {
      tweet: '.tweet',
      template: '#tweet-template',
      username: 'divshot',
      count: 50,
      height: 600,
      speed: 30,
      autoplay: false
    };
    TweetScroller = (function() {

      function TweetScroller(element, options) {
        this.element = element;
        this.options = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._initialTweetCount = 0;
        this.init();
      }

      TweetScroller.prototype.init = function() {
        $(this.element).height(this.options.height);
        this.checkDependencies();
        return this.getTweets();
      };

      TweetScroller.prototype.getTweets = function() {
        var _this = this;
        return $.getJSON("https://api.twitter.com/1/favorites.json?count=" + this.options.count + "&screen_name=" + this.options.username + "&callback=?", function(data) {
          $(_this.element).append('<div class="tweetscroller"></div>');
          _this.board = $(_this.element).find('.tweetscroller');
          $.each(data, function(i, tweet) {
            var source, template;
            tweet.created_at = new Date(Date.parse(tweet.created_at));
            tweet.created_at = moment(tweet.created_at).format('D MMM YY');
            source = $(_this.options.template).html();
            template = Handlebars.compile(source);
            return _this.board.append(template(tweet));
          });
          _this.board.masonry({
            itemSelector: _this.options.tweet
          });
          _this._initialTweetCount = _this.board.find(_this.options.tweet).length;
          return _this.scrollTweets();
        });
      };

      TweetScroller.prototype.scrollTweets = function() {
        var autoScroll, scrollActive, scrollInterval,
          _this = this;
        scrollActive = 0;
        scrollInterval = null;
        autoScroll = function() {
          scrollActive = 1;
          return $(_this.element).scrollTop($(_this.element).scrollTop() + 1);
        };
        $(this.element).scroll(function(e) {
          return _this.scrollRefresh(e);
        });
        if (!this.options.autoplay) {
          return $(this.element).hoverIntent({
            interval: 100,
            over: function() {
              if (!scrollActive) {
                return scrollInterval = setInterval(autoScroll, _this.options.speed);
              }
            },
            out: function() {
              scrollActive = 0;
              return clearInterval(scrollInterval);
            }
          });
        } else {
          return scrollInterval = setInterval(autoScroll, this.options.speed);
        }
      };

      TweetScroller.prototype.scrollRefresh = function(e) {
        var _this;
        _this = this;
        if (this.board.parent()[0].scrollHeight - this.board.parent().scrollTop() <= this.board.parent().height()) {
          return this.board.find(this.options.tweet).each(function(i) {
            var tweet;
            tweet = $(this).clone();
            _this.board.append(tweet).masonry('appended', tweet, true);
            if (i <= _this.board.find('.tweet').length - _this._initialTweetCount) {
              return $(this).remove();
            }
          });
        }
      };

      TweetScroller.prototype.checkDependencies = function() {
        if (!Handlebars) {
          throw new Error('This plugin requires requires Handlebars: http://handlebarsjs.com');
        }
        if (typeof moment !== 'function') {
          throw new Error('This plugin requires requires Moment.js: http://momentjs.com');
        }
        if (!jQuery().masonry) {
          throw new Error('This plugin requires requires Masonry: http://masonry.desandro.com/');
        }
        if (!jQuery().hoverIntent) {
          throw new Error('This plugin requires hoverIntent: http://cherne.net/brian/resources/jquery.hoverIntent.html');
        }
      };

      return TweetScroller;

    })();
    return $.fn[pluginName] = function(options) {
      return this.each(function() {
        if (!$.data(this, "plugin_" + pluginName)) {
          return $.data(this, "plugin_" + pluginName, new TweetScroller(this, options));
        }
      });
    };
  })(jQuery, window);

}).call(this);
